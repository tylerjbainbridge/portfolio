{"version":3,"sources":["webpack:///./src/components/layout.jsx","webpack:///./src/components/seo.jsx","webpack:///./src/pages/404.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/UI.jsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/util/constants.js"],"names":["Layout","_ref","children","_useState","useState","isDark","setDark","theme","Object","assign","BASE_THEME","DARK_THEME","LIGHT_THEME","react_default","a","createElement","gatsby_browser_entry","query","render","data","styled_components_browser_esm","Fragment","style","display","justifyContent","UI","onClick","SiteWrapper","Helmet_default","bodyAttributes","backgroundColor","PageContainer","_2994927498","styled","div","withConfig","displayName","componentId","propTypes","PropTypes","node","isRequired","SEO","description","lang","meta","keywords","title","detailsQuery","metaDescription","site","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_1025518380","defaultProps","string","array","arrayOf","NotFoundPage","layout","seo","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","Error","object","func","m","module","exports","require","default","SectionContainer","SectionHeader","importantStyling","textStyling","SectionText","SectionKeywordText","SectionTextLarge","SectionKeywordLink","SectionKeywordIconLink","SectionMetaText","InlineButton","AvatarImage","styled_components__WEBPACK_IMPORTED_MODULE_0__","h2","primaryColor","css","contrastColor","secondaryFontColor","keywordTextStyling","span","img","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","lightGreyColor","primaryFontColor"],"mappings":"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","file":"component---src-pages-404-jsx-c362e32344befd55a28d.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Helmet from 'react-helmet';\n\nimport styled, { ThemeProvider } from 'styled-components';\n\nimport '../fonts/sanfransisco-font.css';\n\nimport { BASE_THEME, LIGHT_THEME, DARK_THEME } from '../util/constants';\n\nimport { InlineButton } from '../components/UI';\n\nconst Layout = ({ children }) => {\n  const [isDark, setDark] = useState(false);\n\n  const theme = {\n    ...BASE_THEME,\n    ...(isDark ? DARK_THEME : LIGHT_THEME),\n  };\n\n  return (\n    <StaticQuery\n      query={graphql`\n        query SiteTitleQuery {\n          site {\n            siteMetadata {\n              title\n            }\n          }\n        }\n      `}\n      render={data => (\n        <ThemeProvider theme={theme}>\n          <>\n            <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n              <InlineButton onClick={() => setDark(!isDark)}>\n                {isDark ? 'Light' : 'Dark'} theme\n              </InlineButton>\n            </div>\n            <SiteWrapper>\n              <Helmet\n                bodyAttributes={{ style: `background-color : ${theme.backgroundColor}` }}\n              />\n              <PageContainer>{children}</PageContainer>\n            </SiteWrapper>\n          </>\n        </ThemeProvider>\n      )}\n    />\n  );\n};\n\nconst SiteWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst PageContainer = styled.div`\n  max-width: 1000px;\n  margin-bottom: 150px;\n`;\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import styled, { css } from 'styled-components';\n\nexport const SectionContainer = styled.div`\n  margin-bottom: 30px;\n`;\n\nexport const SectionHeader = styled.h2`\n  color: ${props => props.theme.primaryColor};\n  font-family: 'Staatliches';\n  letter-spacing: 2px;\n  font-style: italic;\n  margin-bottom: 25px;\n`;\n\nexport const importantStyling = css`\n  padding: 1px;\n  color: ${props => props.theme.contrastColor};\n  font-weight: 600;\n`;\n\nexport const textStyling = css`\n  color: ${props => props.theme.secondaryFontColor};\n  font-family: 'Aleo';\n  letter-spacing: 3px;\n  line-height: 34px;\n  font-size: 30px;\n  font-weight: 500;\n  margin-top: 10px;\n  margin-bottom: 5px;\n`;\n\nexport const keywordTextStyling = css`\n  ${textStyling}\n  ${importantStyling}\n  line-height: 25px;\n`;\n\nexport const SectionText = styled.span`\n  ${textStyling}\n`;\n\nexport const SectionKeywordText = styled.span`\n  ${textStyling}\n  ${importantStyling}\n  line-height: 25px;\n`;\n\nexport const SectionTextLargeMeta = styled.span`\n  ${keywordTextStyling}\n  color: ${props => props.theme.secondaryFontColor};\n  font-size: 50px;\n  line-height: 52px;\n`;\n\nexport const SectionTextLarge = styled.span`\n  ${textStyling}\n  color: ${props => props.theme.contrastColor};\n  font-size: 50px;\n  line-height: 52px;\n`;\n\nexport const SectionKeywordLink = styled.a`\n  ${importantStyling}\n  text-decoration: underline;\n`;\n\nexport const SectionKeywordIconLink = styled.a`\n  ${importantStyling}\n`;\n\nexport const SectionMetaText = styled.span`\n  color: ${props => props.theme.secondaryFontColor};\n  font-size: 23px;\n  font-weight: 500;\n  vertical-align: middle;\n  display: flex;\n  align-items: center;\n`;\n\nexport const InlineButton = styled.span`\n  padding: 5px;\n  color: ${props => props.theme.primaryColor};\n  font-family: 'Staatliches';\n  font-size: 12px;\n  letter-spacing: 3px;\n  font-weight: 300;\n  vertical-align: middle;\n  cursor: pointer;\n`;\n\nexport const AvatarImage = styled.img`\n  width: 180px;\n  height: 180px;\n  border-radius: 0.5;\n  padding-right: 15px;\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","const YELLOW = '#F9CE6D';\nconst DARKER_YELLOW = '';\nconst GREEN = '#55DABE';\nconst RED = '#fd5c63';\nconst BLUE = '#FFDAB9';\nconst PINK = '#FE8CB9';\nconst ROSE = '#EFA19D';\n\nexport const BASE_THEME = {\n  primaryColor: ROSE,\n  lightGreyColor: '#f2f2f2',\n};\n\nexport const LIGHT_THEME = {\n  backgroundColor: '#FFF',\n  primaryFontColor: '#1D1D20',\n  secondaryFontColor: '#808080',\n  contrastColor: '#000',\n};\n\nexport const DARK_THEME = {\n  backgroundColor: '#1D1D20',\n  primaryFontColor: '#FFF',\n  secondaryFontColor: '#d9d9d9',\n  contrastColor: '#FFF',\n};\n"],"sourceRoot":""}